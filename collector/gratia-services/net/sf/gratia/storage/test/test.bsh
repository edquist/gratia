import net.sf.gratia.services.*;

import net.sf.gratia.storage.*;
import org.hibernate.cfg.*;
import java.sql.*;
import org.dom4j.*;
import org.dom4j.io.*;
import org.apache.derby.jdbc.*;

XP xp = new XP();

String driver = "org.apache.derby.jdbc.EmbeddedDriver";
String url = "jdbc:derby:derby;create=true";
String reader = "jdbc:derby:derby";
String user = "sa";
String password = "sa";

//
// create database
//

Class.forName(driver).newInstance();
connection = DriverManager.getConnection(url,user,password);
try
{
		DriverManager.getConnection("jdbc:derby:derby;shutdown=true");
}
catch (Exception ignore)
{
}

//
// start hibernate/database to create/populate
//

hibernateConfiguration = new org.hibernate.cfg.Configuration();
hibernateConfiguration.addFile(new File("Gratia.hbm.xml"));
hibernateConfiguration.addFile(new File("JobUsage.hbm.xml"));
hibernateConfiguration.addFile(new File("MetricRecord.hbm.xml"));
hibernateConfiguration.configure(new File("hibernate.cfg.xml"));

factory = hibernateConfiguration.buildSessionFactory();
session = factory.openSession();

print("Database Created");

//
// get test data
//

String[] filenames = xp.getFileList("test-data","xml");
System.out.println("Files: " + filenames.length);
RecordUpdaterManager updater = new RecordUpdaterManager();
JobUsageRecordUpdater.AddDefaults(updater);
RecordConverter converter = new RecordConverter();

Logging.initialize("logfile","5000","1","OFF");

int record_idx = 0;
for (int i = 0; i < filenames.length; i++)
{
	System.out.println("Processing: " + filenames[i]);
	String xml = xp.get(filenames[i]);
		
	xp.save("output/record" + record_idx + ".input",xml);

	ArrayList records = converter.convert(xml);
	for(int j = 0; j < records.size(); j++)
			{
					Record current = (Record) records.get(j);
               		System.out.println("ExtraXML: " + current.getExtraXml());
					current.setRawXml("");
					updater.Update(current);
					System.out.println("ExtraXML: " + current);
					session.save(current);
			}
	record_idx  = record_idx + records.size();
}

print("");
print("Database Loaded");
print("");

//
// read from database and write back out as xml
//

String command = "from JobUsageRecord";
List result = session.createQuery(command).list();
record_idx = 0;
for(i = 0; i < result.size(); ++i,++record_idx)
{
		JobUsageRecord record = (JobUsageRecord) result.get(i);
		xml = record.asXML();
		xp.save("output/record" + record_idx + ".output",xml);
		System.out.println("Saved: " + record_idx);
}

String command = "from MetricRecord";
List result = session.createQuery(command).list();
for(i = 0; i < result.size(); ++i,++record_idx)
{
		Record record = (Record) result.get(i);
		xml = record.asXML();
		xp.save("output/record" + record_idx + ".output",xml);
		System.out.println("Saved: " + record_idx);
}


print("done !!");
