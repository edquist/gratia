Index: core/src/main/java/org/hibernate/hql/ast/tree/FromElementType.java
===================================================================
--- core/src/main/java/org/hibernate/hql/ast/tree/FromElementType.java	(revision 18452)
+++ core/src/main/java/org/hibernate/hql/ast/tree/FromElementType.java	(working copy)
@@ -39,6 +39,8 @@
 import org.hibernate.persister.collection.QueryableCollection;
 import org.hibernate.persister.entity.EntityPersister;
 import org.hibernate.persister.entity.Joinable;
+import org.hibernate.persister.entity.AbstractEntityPersister;
+import org.hibernate.persister.entity.JoinedSubclassEntityPersister;
 import org.hibernate.persister.entity.PropertyMapping;
 import org.hibernate.persister.entity.Queryable;
 import org.hibernate.type.EntityType;
@@ -342,6 +344,26 @@
 			else if ( fromElement.getWalker().getCurrentClauseType() == HqlSqlTokenTypes.SELECT ) {
 				return propertyMapping.toColumns( tableAlias, path );
 			}
+         // BUG FIX: Added by Philippe Canal from https://forums.hibernate.org/viewtopic.php?t=969471
+         // This is supposed to fix the bug reported to hibernate as http://opensource.atlassian.com/projects/hibernate/browse/HHH-1657
+         else if ( fromElement.getWalker().getStatementType() == HqlSqlTokenTypes.UPDATE &&
+                  fromElement.getEntityPersister() instanceof JoinedSubclassEntityPersister &&
+                  fromElement.getWalker().getCurrentClauseType() == HqlSqlTokenTypes.WHERE) {
+            return propertyMapping.toColumns( tableAlias, path );
+         }
+         else if ( fromElement.getWalker().getStatementType() == HqlSqlTokenTypes.DELETE &&
+                  fromElement.getEntityPersister() instanceof JoinedSubclassEntityPersister &&
+                  fromElement.getWalker().getCurrentClauseType() == HqlSqlTokenTypes.WHERE) {
+            
+            return propertyMapping.toColumns( tableAlias, path );
+         }
+         else if (fromElement.getWalker().getStatementType() == HqlSqlTokenTypes.DELETE &&
+                  fromElement.getEntityPersister() instanceof AbstractEntityPersister &&
+                  fromElement.getWalker().getCurrentClauseType() == HqlSqlTokenTypes.WHERE &&
+                  ((AbstractEntityPersister)fromElement.getEntityPersister()).isMultiTable()) {
+            
+            return propertyMapping.toColumns( tableAlias, path );
+         }
 			else if ( fromElement.getWalker().isSubQuery() ) {
 				// for a subquery, the alias to use depends on a few things (we
 				// already know this is not an overall SELECT):
