#!/bin/bash

source_prefix=~greenc/gratia
tomcat_root=/data
birt_war=birt-v20.war

function usage() {
cat 1>&2 <<EOF
usage: update-gratia-local [-S <source-prefix>] [-j <jre-home>] [-s] \
                           [-p <prefix>] [-d <db-root-pw>] [-h] [--] <instance>

       -c <configure-collector-script>

          Execute <configure-collector-script> instead of
          <source-prefix>/common/configuration/configure-collector.

       -S <source-prefix>

          Find all sources under <source-prefix>.

       -j <jre-home>

          JRE location.

       -s

          Enable SSL.

       -p <prefix>

          Instance path prefix (default $tomcat_root).

       -d <db-root-pw>

          Configure post-install.sh with this DB root password.

EOF
}

# Defaults
while getopts :c:j:sp:d:hS: OPT; do
    case $OPT in
        c)  configure_script="$OPTARG"
            ;;
        S)
            source_prefix="$OPTARG"
            ;;
        j)
            java_jre="$OPTARG"
            ;;
        s)
            use_ssl="-s"
            ;;
        p)
            tomcat_root="$OPTARG"
            ;;
        d)
            dbp_arg="-d"
            dbpwd="$OPTARG"
            ;;
        h)
            usage
            exit 1
            ;;
        *)
            usage
            exit 1
    esac
done
shift $[ OPTIND - 1 ]

if [[ -n "$tomcat_root" ]] && [[ -z "$java_jre" ]]; then
  java_jre="${tomcat_root}/jre"
fi

war_dir=$source_prefix/reporting/birt-wars
configuration_dir=$source_prefix/common/configuration
target_dir=$source_prefix/target

instance=$1
tomcat_top=$tomcat_root/tomcat-$instance

if ! [[ -d "$tomcat_top" ]]; then
  echo "Unable to find specified instance $instance" on this node 1>&2
  exit 1
fi

service tomcat-$instance stop 2>/dev/null
sleep 5

# Copy Birt if necessary
if [[ -f "$tomcat_top/webapps/$birt_war" ]]; then
  # Verify checksum
  official_birt_checksum=`cd "$war_dir"; md5sum "$birt_war"`
  # Checksum local birt war
  ( cd "$war_dir"; md5sum "$birt_war" ) | ( cd "$tomcat_top/webapps/" ; md5sum --check --status )
  if (( $? != 0 )); then
    echo "Birt war has changed: obtaining fresh copy"
    rm -rf "$tomcat_top/webapps/$birt_war" "$tomcat_top/webapps/${birt_war%.war}"
    cp -p "$war_dir/$birt_war" "$tomcat_top/webapps/"
  fi
else
  echo "Birt war $birt_war is missing: obtaining fresh copy"
  rm -rf "$tomcat_top/webapps/${birt_war%.war}"
  cp -pv "$war_dir/$birt_war" "$tomcat_top/webapps/"
fi

# Update gratia directory
mkdir -p "$tomcat_top/gratia"
tar xf "$target_dir/gratia.tar" -C "$tomcat_top/gratia"

# Update webapps

# Remove obsolete war files
( cd "$tomcat_top/webapps/" ; rm -rf GratiaServices{,.war} gratia-report-configuration{,.war} )

# Any updated war files?
for war in $tomcat_top/webapps/*.war; do
  if [[ -f "$target_dir/${war##*/}" ]]; then
    rm -rf "${war%.war}"
    cp -pv "$target_dir/${war##*/}" "$tomcat_top/webapps/"
  fi
done

# Any new war files?
for war in $target_dir/*.war; do
  if ! [[ -f "$tomcat_top/webapps/${war##*/}" ]]; then
    cp -pv "$war" "$tomcat_top/webapps/"
  fi
done

# Configure gratia dir
[[ -n "$configure_script" ]] || configure_script="$configuration_dir/configure-collector"

"$configure_script" \
$use_ssl \
-p "$tomcat_root" \
-j "$java_jre" \
$dbp_arg "$dbpwd" \
$instance

# service tomcat-$instance start
