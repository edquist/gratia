[gratia]
gratia.reporting.version=1.0.0
gratia.services.version=1.0.0
use.report.authentication=true
gratia.database.wantSummaryTable = 1
gratia.database.wantSummaryTrigger = 1
gratia.database.wantStoredProcedures = 1

# software package versions
#
gratia.tomcat=v5.5
gratia.jdk=v1.5
gratia.mysql=v5.0.24
gratia.birt=v2.2.1

#
# ##########  COLLECTOR ##############
# default ports used by (default) gratia:
#
# 17000 -> rmi            files: service-configuration.properties
#  8880 -> tomcat         files: service-configuration.properties/server.xml
#  8843 -> tomcat ssl     files: ditto
#  3306 -> mysql          files: service-configuration.properties
#  8004 -> tomcat/jmx     files: inet.d tomcat startup script
#  
service.rmi.port=17000
service.rmi.rmibind=//HOSTNAME:17000
service.rmi.rmilookup=rmi://HOSTNAME:17000
service.rmi.service=/gratia
#
########################################
#
# ##########  MYSQL ##############
#
service.mysql.driver=com.mysql.jdbc.Driver
service.mysql.url=jdbc:mysql://DBHOSTNAME:DBPORT/gratia
service.mysql.user=DBUSER
service.mysql.password=DBPASSWORD
#
########################################
#
# ########## CERTIFICATES - VOMS #######
#
# service.admin.identity.x = valid FQANs that give administrative access, where x are consequetive numbers zero based
# service.voms.connections = file located in tomcat/gratia containing the voms URL(s) for each VO specified
#
service.admin.identity.0=/gratia-vo1/Role=VO-Admin
service.admin.identity.1=/gratia-vo2/Role=VO-Admin 
service.admin.identity.2=/cms/uscms/Role=gratia-Admin
service.admin.identity.3=/cms/uscms/Role=NULL
service.admin.identity.4=/atlas/usatlas/Role=gratia-Admin
service.voms.connections=voms-servers
#
########################################
#
# ##########  REPORTING ##############
#
# service.reporting.user			-> readonly user for reporting reporting
# service.reporting.password		-> readonly user password
# service.reporting.reports.folder 	-> directory (relative to webapps, e.g. gratia-reports/reports) of rptdesign
# service.reporting.static.folder	-> directory (relative to webapps, e.g. gratia-reports/reports-static) to place static reports (PDF)
# service.reporting.menuconfig		-> path (relative to webapps) and file name of GUI menu, e.g. gratia-reports/MenuConfig/UserConfig_osg.xml
# service.reporting.staticreports	-> path (relative to webapps) and file name of xml for static reports, e.g. gratia-reports/MenuConfig/StaticReports.xml
# service.reporting.logging 		-> true/false = enable/disable timestamp logging during report production
#
service.reporting.user=reader
service.reporting.password=reader
service.reporting.reports.folder=gratia-reports/reports
service.reporting.static.folder=gratia-reports/reports-static
service.reporting.menuconfig=gratia-reports/MenuConfig/UserConfig_osg.xml
service.reporting.staticreports=gratia-reports/MenuConfig/StaticReports.xml
service.reporting.logging = true
#
########################################
#
# ##########  SECURITY ##############
#
# service.security.level -> security level/provider gratia uses
#   value: 0 -> no security
#   value: 1 -> use tomcat ssl authentication
#   valueL 2 -> (untested) use apache authentication
# service.use.selfgenerated.certs -> whether or not to use self generated certs or default voms certs
# service.vdt.cert.file -> location of vdt certificate file
# service.vdt.key.file -> location of vdt certificate key file
# service.autoregister.pem -> whether or not to automatically store certs in the truststore
# service.open.connection -> the "open" port - e.g. - http://HOSTNAME:8880
# service.secure.connection -> the "secure" port - e.g. - https://HOSTNAME:8443
#
service.security.level=0
service.use.selfgenerated.certs=0
service.vdt.cert.file=/etc/grid-security/http/httpcert.pem
service.vdt.key.file=/etc/grid-security/http/httpkey.pem
service.autoregister.pem=1
service.open.connection=http://HOSTNAME:8880
service.secure.connection=https://HOSTNAME:8443
#
# jms related
#   service.listener.threads -> max number of worker threads retrieving data from jms q
#
service.listener.threads=1
#
# input queue control - whether or not to monitor queue sizes
#
monitor.q.size=1
max.q.size=10000
#
# history - how long (in days) to maintain copies of input in the event we have to replay updates
#
maintain.history.log=14
#
# history - how long (in hours) to before compression the copies of input in the event we have to replay updates
#
maintain.history.log=2
#
# replication info
# service.replication.wait -> how long to wait between replication checks (in minutes)
#
service.replication.wait=1
#
# the following defines the time in minutes between probe monitor checks
#
service.probe.monitor.wait=1000
#
# The following is the maximum number of record requested by each iteration
# of the datapump (happening every service.replication.wait minutes).
#
service.datapump.chunksize=30000
#
# the following set whether the datapump (replication engine) issue 
# debug output.
# 
service.datapump.trace=0
#
########################################
#
# ########## CONTROLS ##############
#
# for testing - controls whether or not to check for duplicate records
#
service.duplicate.check=1
# 
#
# for monitoring - controls whether or not to have gratia post an email if it hasn't received
# a job usage record from a probe within a specified amount of time
#
# options:
#
# monitor.listener.threads=true|false -> whether or not to monitor anything
# monitor.listener.wait=value -> number of minutes to wait before performing check
# monitor.smtp.server=host -> where to send it - e.g. - smtp.fnal.gov
# monitor.smtp.authentication.required=true|false -> whether or not smtp service requires authentication
# monitor.smtp.user=value -> user name for authentication
# monitor.smtp.password=value -> user password for authentication
# monitor.from.address=value -> from who - e.g. - glr@fnal.gov
# monitor.to.address.0=value -> to who - e.g. - pcanal@fnal.gov - note that you can have up to 100 of these
# monitor.subject=value -> string shown in email subject - e.g. - "Gratia Server:8880 - Problem"
#
monitor.listener.threads=false
monitor.listener.wait=60
monitor.smtp.server=YOUR-SMTP-SERVER
monitor.smtp.authentication.required=false
monitor.smtp.user=EMAIL-USER-NAME
monitor.smtp.password=EMAIL-PASSWORD
monitor.from.address=FROM-EMAIL-ADDRESS
monitor.to.address.0=TO-EMAIL-ADDRESS
monitor.subject=EMAIL-SUBJECT
#
########################################
#
# ########## LOGGING ##############
#
# for logging - maximum size of logfile before flipping
#
service.max.logsize=250000000
#
# logging parameters for services
# note: level: ALL|CONFIG|FINE|FINER|FINEST|INFO|OFF|SEVERE|WARNING
# note: console: 0|1 to additionaly display on console
#
service.service.logfile=/logs/gratia-%g.log
service.service.console=0
service.service.maxlog=10000000
service.service.level=FINEST
#
# logging parameters for rmi servlet
#
service.rmiservlet.logfile=/logs/gratia-rmi-servlet%g.log
service.rmiservlet.console=0
service.rmiservlet.maxlog=10000000
service.rmiservlet.level=INFO
#
# logging parameters for security
#
service.security.logfile=/logs/gratia-security%g.log
service.security.console=0
service.security.maxlog=10000000
service.security.log.level=INFO
#
# logging parameters for administration
#
service.administration.logfile=/logs/gratia-administration-%g.log
service.administration.console=0
service.administration.maxlog=10000000
service.administration.level=FINEST
