#
#   Configuration file for redirex version 2.0
#

#   Default port to listen to. If the -p switch is used
#   to specify another port, this value will not be used.

#$defaultport = 9080;	    	# For testing
$defaultport = 80; 	    	# Standard HTTP port (must be super-user to bind)

#   Default IP address to bind to.  If you wish to listen to
#   all IP addresses, set this to '0.0.0.0'.

$IPlisten = '0.0.0.0';

#   New server URL prefix for redirection destination

$newServer = 'https://twiki.grid.iu.edu';

#   URL and description of home page for new server

$newHomePage = "$newServer/bin/view/Accounting/WebHome";
$newHomePageDescription = 'OSG Accounting Project TWiki';

#   Log file path name

$logfile = '/tmp/redirex.log';

#   If $DOredirect == 1 requests will be hard-redirected with a
#   301 status code.  If zero, the reply will be a normal 200
#   status document which informs the user of the redirection
#   but doesn't request the browser to divert there.

$DOredirect = 1;

#   If $No_cache == 1, responses will include header items
#   which suppress proxy server and browser caching of the
#   the returned document.  This is handy for testing, since
#   some browsers will otherwise cache a redirect and not see
#   an error document returned by $DOredirect = 0 subsequently.
#   In the interest of efficiency, you should set $No_cache = 0
#   when you put Redirex into production.

$No_cache = 0;

#   If $RedirectAllToNewHome == 1, all requests will be redirected to
#   the new server home page regardless of initial requested URL.

our $RedirectAllToNewHome = 1;

#   If $Daemon == 1, fork into the background.

our $Daemon = 1;

# Make require happy.

1;
