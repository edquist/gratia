gratia.version=1.0.0
gratia.database.version=1.0.0

#
# default ports used by (default) gratia:
#
# 17000 -> rmi            files: service-configuration.properties
#  8880 -> tomcat         files: service-configuration.properties/server.xml
#  8843 -> tomcat ssl     files: ditto
#  3306 -> mysql          files: service-configuration.properties
#  8004 -> tomcat/jmx     files: inet.d tomcat startup script
#  
service.rmi.port=17000
service.rmi.rmibind=//localhost:17000
service.rmi.rmilookup=rmi://localhost:17000
service.rmi.service=/gratia
#
# security settings:
#
# service.security.level -> security level/provider gratia uses
#   value: 0 -> no security
#   value: 1 -> use tomcat ssl authentication
#   valueL 2 -> (untested) use apache authentication
# service.use.selfgenerated.certs -> whether or not to use self generated certs or default voms certs
# service.vdt.cert.file -> location of vdt certificate file
# service.vdt.key.file -> location of vdt certificate key file
# service.autoregister.pem -> whether or not to automatically store certs in the truststore
# service.open.connection -> the "open" port - e.g. - http://localhost:8880
# service.secure.connection -> the "secure" port - e.g. - https://localhost:8443
#
service.security.level=0
service.use.selfgenerated.certs=0
service.vdt.cert.file=/etc/grid-security/http/httpcert.pem
service.vdt.key.file=/etc/grid-security/http/httpkey.pem
service.autoregister.pem=1
service.open.connection=http://localhost:8880
service.secure.connection=https://localhost:8443
#
# jms related
#   servuce.listener.threads -> max number of worker threads retrieving data from jms q
#
service.listener.threads=3
#
# input queue control - whether or not to monitor queue sizes
#
monitor.q.size=1
max.q.size=500
#
# replication info
# service.replication.wait -> how long to wait between replication checks (in minutes)
#
service.replication.wait=1
#
# history - how long (in days) to maintain copies of input in the event we have to replay updates
#
maintain.history.log=14
#
# the following defines the time in minutes between probe monitor checks
#
service.probe.monitor.wait=1000
#
# where to find mysql
#
service.mysql.driver=com.mysql.jdbc.Driver
service.mysql.url=jdbc:mysql://localhost:3306/test
service.mysql.user=root
service.mysql.password=lisp01
#
# birt report specific settings
# service.birt.user -> readonly user for birt reporting
# service.birt.password -> readonly user password
# service.birt.reports.folder -> directory (relative to webapps) of rptdesign
# service.birt.engine.home -> directory (relative to webapps) of birt engine
# service.birt.webapp.home -> directory (relative to webapps) of birt webapps
#
service.birt.user=root
service.birt.password=lisp01
service.birt.reports.folder=gratia-reports
service.birt.engine.home=Birt
service.birt.webapp.home=gratia-reporting
#
# for testing - controls whether or not to check for duplicate records
#
service.duplicate.check=1
service.datapump.trace=0
#
# for logging - maximum size of logfile before flipping
#
service.max.logsize=250000000
#
# logging parameters for services
# note: level: ALL|CONFIG|FINE|FINER|FINEST|INFO|OFF|SEVERE|WARNING
# note: console: 0|1 to additionaly display on console
#
service.service.logfile=/logs/gratia-services%g.log
service.service.console=1
service.service.maxlog=10000000
service.service.level=INFO
#
# logging parameters for rmi servlet
#
service.rmiservlet.logfile=/logs/gratia-rmi-servlet%g.log
service.rmiservlet.console=1
service.rmiservlet.maxlog=10000000
service.rmiservlet.level=INFO
#
# logging parameters for security
#
service.security.logfile=/logs/gratia-security%g.log
service.security.console=1
service.security.maxlog=10000000
service.security.log.level=INFO

